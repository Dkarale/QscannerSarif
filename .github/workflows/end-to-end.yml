name: Sarif complete workflow
on:
  push:
    branches:
      - main
jobs:
  docker:
    permissions: write-all
    runs-on: self-hosted
    steps:
      # - name: Set up Docker1
      #   uses: crazy-max/ghaction-setup-docker@v3
      #   with:
      #     daemon-config: |
      #       {
      #         "debug": true,
      #         "experimental": true,
      #         "features": {
      #           "containerd-snapshotter": true
      #         }
      #       }
      # - name: Generate Dockerfile
      #   run: |
      #     echo -e "FROM alpine\nCMD ["echo", "Hello StackOverflow!"]" > Dockerfile
      #     ls
      #     pwd
      # - name: Download Qscanner
      #   run: |
      #     QSCANNER_URL=$(curl $proxy -s https://www.qualys.com/downloads/qscanner/ | grep -ai "gen_cask_artifacts" | sed 's/^.*https/https/' | sed 's/".*//')
      #     wget https://www.qualys.com/qscanner/download/v4.2.0/download_qscanner.sh
      #     ls -ltr
      #     pwd
      #     sudo bash $(pwd)/download_qscanner.sh
      # - name: Docker version
      #   run: docker info
      - name: Docker image pull
        run: sudo docker pull bkimminich/juice-shop:latest
      # - name: Docker qscanner image pull
      #   run: sudo docker pull art-hq.intranet.qualys.com:5001/qualys/internal/qscanner:4.3.0-12-dev-linux-amd64-1728887376
      # - name: Build Docker image
      #   run: |
      #     docker buildx create --use
      #     docker buildx inspect
      #     docker buildx build --file /home/runner/work/sarif/sarif/Dockerfile --platform linux/amd64,linux/arm64 -t crmtestimage:multiid --load .
      - name: List docker images
        run: sudo docker images
      - name: docker inspect
        run: |
         image_sha=$(sudo docker inspect -f '{{.Id}}' bkimminich/juice-shop:latest)
         echo "Image SHA: $image_sha"
         sudo docker history $image_sha
      # - name: save multi-arch image
      #   run: |
      #     image_sha=$(docker inspect -f '{{.Id}}' crmtestimage:multiid)
      #     echo "Image ID: $image_sha"
      #     docker save -o multiarchtest.tar $image_sha
      #     ls
      - name: Qscanner token
        run: |
         export QUALYS_ACCESS_TOKEN=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhcGVrc19hYjciLCJpc3MiOiJxYXMiLCJwb3J0YWxVc2VySWQiOjg3MjQ0NDQ2MSwic2VjcmV0SWQiOiI2YTdmZjdjZC00YzA0LTQ3NmQtOWQ0OS0wYjU0ZjdkN2NlMzEiLCJxd2ViVXNlcklkIjoxMDcwOTkzLCJhdWQiOiJxYXMiLCJjdXN0b21lcklkIjoxOTk0NjMyLCJ1c2VyVXVpZCI6ImNiYWIxZmVlLTIyZjEtZjY3Zi04M2QzLWJhMjVhYWExNTFjMCIsInN1YnNjcmlwdGlvblV1aWQiOiIzMDNjM2QwZS0wODkwLTcxOWUtODE2ZS0xNGZiNGU4MzcxMzIiLCJleHAiOjE3NjYwNDE5NTMsInN1YnNjcmlwdGlvbklkIjoxMjcyMTQ2LCJ0b2tlblR5cGUiOiJzdWJzY3JpcHRpb24iLCJpYXQiOjE3MzQ1MDU5NTMsImp0aSI6IjY2NDc3ZDZiLTFkMTktNGIwNS1iODAxLWY0NzlhMWU2Mjg3NyJ9.KW-7wI56--0raWw1EfJfl5XqzKPUz61YtUzVawVzPJ4vk4qjyh5jR8_Aooy1LtphtqqA5sDlJO7F31LAsk0yOA
      - name: Image scan through Qscanner
        continue-on-error: true
        run: |
         image_sha=$(sudo docker inspect -f '{{.Id}}' bkimminich/juice-shop:latest)
         # sockpath=$(sudo docker info -f '{{.DockerRootDir}}')
         # sockpath=$(echo $sockpath | awk -v srch="data" -v repl="docker.sock" '{ sub(srch,repl,$0); print $0 }')
         # echo $sockpath
         echo "sudo /home/ubuntu/Qscanner-4.3/qscanner image $image_sha  --pod ENG-POD01 --access-token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhcGVrc19hYjciLCJpc3MiOiJxYXMiLCJwb3J0YWxVc2VySWQiOjg3MjQ0NDQ2MSwic2VjcmV0SWQiOiI2YTdmZjdjZC00YzA0LTQ3NmQtOWQ0OS0wYjU0ZjdkN2NlMzEiLCJxd2ViVXNlcklkIjoxMDcwOTkzLCJhdWQiOiJxYXMiLCJjdXN0b21lcklkIjoxOTk0NjMyLCJ1c2VyVXVpZCI6ImNiYWIxZmVlLTIyZjEtZjY3Zi04M2QzLWJhMjVhYWExNTFjMCIsInN1YnNjcmlwdGlvblV1aWQiOiIzMDNjM2QwZS0wODkwLTcxOWUtODE2ZS0xNGZiNGU4MzcxMzIiLCJleHAiOjE3NjYwNDE5NTMsInN1YnNjcmlwdGlvbklkIjoxMjcyMTQ2LCJ0b2tlblR5cGUiOiJzdWJzY3JpcHRpb24iLCJpYXQiOjE3MzQ1MDU5NTMsImp0aSI6IjY2NDc3ZDZiLTFkMTktNGIwNS1iODAxLWY0NzlhMWU2Mjg3NyJ9.KW-7wI56--0raWw1EfJfl5XqzKPUz61YtUzVawVzPJ4vk4qjyh5jR8_Aooy1LtphtqqA5sDlJO7F31LAsk0yOA"
         sudo env DISABLE_SBOM_UPLOAD=yes env SHOW_RESPONSE_BODY_IN_BACKEND_ERROR=yes /home/ubuntu/Qscanner-4.3/qscanner image $image_sha  --pod ENG-POD05 --access-token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0X2l0IiwiaXNzIjoicWFzIiwicG9ydGFsVXNlcklkIjoxMTkyNTkxLCJzZWNyZXRJZCI6ImM5NGQyZThjLWNlNWEtNDM5OC1hMzI0LWQ2MTMxMDUwNWIyYSIsInF3ZWJVc2VySWQiOjkyMzA3NiwiYXVkIjoicWFzIiwiY3VzdG9tZXJJZCI6Nzg5MjIxLCJ1c2VyVXVpZCI6IjA0MjIxNWI5LTE5M2EtYzIxOS04M2U4LWE3YzNkNjAxZWM2NCIsInN1YnNjcmlwdGlvblV1aWQiOiIyMmM3YjQzMC0xODBjLTVjMmEtODJmNC0xYTAzNzY5ZWIxZjYiLCJleHAiOjE3NzU4MzI0ODksInN1YnNjcmlwdGlvbklkIjo3NzYwNzQsInRva2VuVHlwZSI6InN1YnNjcmlwdGlvbiIsImlhdCI6MTc0NDI5NjQ4OSwianRpIjoiNDNhMjQ2YjAtMjkzZC00NzBiLWJlNzctNGNkYmVmOGExZWRkIn0.H5MaZ8h3yzcm6T-ICr7T0q4--b2huPqV5UQde3bVFzqktV4HVcmhw8FDbxiYv4fp6VKXzCkWVZsAEM5mUfxhFA --cache none -l debug --report-format sarif -o /home/ubuntu/Qscanner-4.3/sarif-reports/evaluate-policy -m evaluate-policy --scan-timeout 30m --skip-verify-tls
      - name: Checkout repository
        uses: actions/checkout@v4 
      - name: Scan images from list
        continue-on-error: true
        run: |
         export QUALYS_ACCESS_TOKEN=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ0ZXN0X2l0IiwiaXNzIjoicWFzIiwicG9ydGFsVXNlcklkIjoxMTkyNTkxLCJzZWNyZXRJZCI6ImM5NGQyZThjLWNlNWEtNDM5OC1hMzI0LWQ2MTMxMDUwNWIyYSIsInF3ZWJVc2VySWQiOjkyMzA3NiwiYXVkIjoicWFzIiwiY3VzdG9tZXJJZCI6Nzg5MjIxLCJ1c2VyVXVpZCI6IjA0MjIxNWI5LTE5M2EtYzIxOS04M2U4LWE3YzNkNjAxZWM2NCIsInN1YnNjcmlwdGlvblV1aWQiOiIyMmM3YjQzMC0xODBjLTVjMmEtODJmNC0xYTAzNzY5ZWIxZjYiLCJleHAiOjE3NzU4MzI0ODksInN1YnNjcmlwdGlvbklkIjo3NzYwNzQsInRva2VuVHlwZSI6InN1YnNjcmlwdGlvbiIsImlhdCI6MTc0NDI5NjQ4OSwianRpIjoiNDNhMjQ2YjAtMjkzZC00NzBiLWJlNzctNGNkYmVmOGExZWRkIn0.H5MaZ8h3yzcm6T-ICr7T0q4--b2huPqV5UQde3bVFzqktV4HVcmhw8FDbxiYv4fp6VKXzCkWVZsAEM5mUfxhFA
         IMAGE_LIST_FILE=images.txt  
         while IFS= read -r image; do
         echo "Pulling & scanning $image"
         sudo docker pull $image
         image_sha=$(sudo docker inspect -f '{{.Id}}' $image)
         safe_image_name=$(echo $image | sed 's/[/:]/_/g')
         sudo env DISABLE_SBOM_UPLOAD=yes \
         env SHOW_RESPONSE_BODY_IN_BACKEND_ERROR=yes \
         /home/ubuntu/Qscanner-4.3/qscanner image $image_sha \
         --pod ENG-POD05 \
         --access-token $QUALYS_ACCESS_TOKEN \
         --report-format sarif \
         -o /home/ubuntu/Qscanner-4.3/sarif-reports/$safe_image_name \
         --scan-timeout 30m \
         --skip-verify-tls \
         -l debug \
         --scan-types pkg \
         --storage-driver docker-overlay2
         #echo "Scan for $image completed. Sleeping 10 seconds..."
         #sleep 10
         echo "Deleting scanned image: $image"
         sudo docker rmi $image || true
         done < "$IMAGE_LIST_FILE"
      # - name: Checkout repository
      #   uses: actions/checkout@v4
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: /home/ubuntu/Qscanner-4.3/sarif-reports/evaluate-policy/520e3f10057c57a8b3dc0651ab5e9f8601938fc07f7112e397b3b92f4904f2b1-Report.sarif.json
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: my-analysis-tool
